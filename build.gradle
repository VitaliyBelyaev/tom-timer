// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    ext {
        kotlin = "1.3.72"
        jetpack_lifecycle = "2.2.0"
        jetpack_navigation = "2.2.2"
        jetpack_room = "2.2.5"
        koin = "2.1.5"
        mockito = "3.3.3"
    }

    dependencies {
        classpath "com.android.tools.build:gradle:3.6.3"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin"
        classpath "org.koin:koin-gradle-plugin:$koin"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.4.0"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.2.2"
        classpath "net.rdrei.android.buildtimetracker:gradle-plugin:0.11.0"
        classpath "com.google.firebase:perf-plugin:1.3.1"
        classpath "com.google.firebase:firebase-crashlytics-gradle:2.1.0"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

ext {
    versionName = versionName
    versionCode = versionCode
}

static def getVersionName() {
    def tagsDescription = 'git describe --tags'.execute().text
    def splitTag = tagsDescription.split('-').first()?.trim()
    if (splitTag ==~ /^v\d+\.\d+\.\d+$/) { //It's release pattern v0.0.0
        return splitTag.substring(1)
    } else if (splitTag ==~ /^v\d+\.\d+\.\d+d\d+$/) { //It's demo pattern v0.0.0d0
        def data = splitTag.split('d')
        return "${data.first().substring(1)}-demo.${data.last()}"
    } else {
        return '5.0.0'
    }
}

static int getVersionCode() {
    /**
     * Use the number of seconds / 20 since Jan 1 1970 as the versionCode.
     * This lets us upload a new build at most every 20 seconds until 3331 year.
     */
    return (int) (new Date().getTime() / 20000)
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
